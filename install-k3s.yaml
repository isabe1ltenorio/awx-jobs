---
- name: Instalar K3s nas VMs
  hosts: all
  become: yes
  gather_facts: yes  
  tasks:  
    - name: Instalar dependências básicas
      package:
        name:
          - curl
          - wget
          - ca-certificates
          - apt-transport-https  
        state: present
        update_cache: yes 
    
    - name: Verificar se K3s já está instalado
      stat:
        path: /usr/local/bin/k3s
      register: k3s_installed
    
    - name: Baixar script de instalação do K3s
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'
      when: not k3s_installed.stat.exists  
    
    - name: Instalar K3s
      shell: |
        INSTALL_K3S_EXEC="--write-kubeconfig-mode 644 --disable=traefik" /tmp/k3s-install.sh
      args:
        creates: /usr/local/bin/k3s
      when: not k3s_installed.stat.exists
      register: k3s_install_result
    
    - name: Aguardar K3s inicializar
      wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}" 
        delay: 15  
        timeout: 300
      when: k3s_install_result.changed or not k3s_installed.stat.exists
    
    - name: Verificar status do K3s
      systemd:
        name: k3s
        state: started
        enabled: yes
      register: k3s_service
    
    - name: Obter versão do K3s instalada
      command: k3s --version
      register: k3s_version
      changed_when: false
      failed_when: false  
    
    - name: Mostrar versão instalada
      debug:
        msg: "K3s instalado com sucesso: {{ k3s_version.stdout_lines[0] }}"
      when: k3s_version.rc == 0
    
    - name: Verificar status dos nodes
      shell: k3s kubectl get nodes
      register: k3s_nodes
      changed_when: false
      failed_when: false
      retries: 3  
      delay: 10
    
    - name: Mostrar nodes do cluster
      debug:
        msg: "{{ k3s_nodes.stdout_lines }}"
      when: k3s_nodes.rc == 0 and k3s_nodes.stdout_lines is defined
    
    - name: Mostrar arquivo kubeconfig
      debug:
        msg: "Kubeconfig disponível em: /etc/rancher/k3s/k3s.yaml"
      when: k3s_service.state == 'started'
