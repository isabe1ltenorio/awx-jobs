---
- name: Run OpenSCAP for CIS Level 1 Server
  hosts: all
  vars:
    scap_version: "0.1.73"
    # Perfil CIS correto baseado na documentação oficial
    scap_profile: "xccdf_org.ssgproject.content_profile_cis_level1_server"
  tasks:
    - name: Add universe repository
      ansible.builtin.apt_repository:
        repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
        state: present
      when: ansible_distribution_release in ['jammy', 'noble', 'focal']
      
    - name: Update package index
      ansible.builtin.apt:
        update_cache: yes
        
    - name: Install OpenSCAP packages for Ubuntu 24.04
      ansible.builtin.apt:
        name:
          - openscap-scanner
          - openscap-utils
          - unzip
        state: present
      when: ansible_distribution_version == '24.04'
        
    - name: Install OpenSCAP packages for Ubuntu 22.04/20.04
      ansible.builtin.apt:
        name:
          - libopenscap8
          - unzip
          - wget
        state: present
      when: ansible_distribution_version in ['22.04', '20.04']
        
    - name: Install SCAP Security Guide content
      ansible.builtin.apt:
        name:
          - ssg-applications
          - ssg-base  
          - ssg-debderived
        state: present
      when: ansible_distribution_version == '24.04'
        
    - name: Find SCAP content files on system
      ansible.builtin.find:
        paths: 
          - /usr/share/xml/scap/ssg/content/
        patterns: "ssg-ubuntu*.xml"
        recurse: no
      register: system_scap_files
      ignore_errors: yes
      
    - name: Determine best benchmark file for this Ubuntu version
      ansible.builtin.set_fact:
        scap_benchmark: >-
          {%- set found_files = system_scap_files.files | default([]) | map(attribute='path') | list | join(' ') -%}
          {%- if ansible_distribution_version == '24.04' -%}
            {%- if 'ssg-ubuntu2404-ds.xml' in found_files -%}ssg-ubuntu2404-ds.xml
            {%- else -%}ssg-ubuntu2204-ds.xml{%- endif -%}
          {%- elif ansible_distribution_version == '22.04' -%}ssg-ubuntu2204-ds.xml
          {%- elif ansible_distribution_version == '20.04' -%}ssg-ubuntu2004-ds.xml
          {%- else -%}ssg-ubuntu2004-ds.xml{%- endif -%}
      
    - name: Check if target benchmark exists in system files
      ansible.builtin.set_fact:
        system_has_benchmark: >-
          {{ system_scap_files.files | default([]) | selectattr('path', 'search', scap_benchmark) | list | length > 0 }}
      
    - name: Show SCAP files status
      ansible.builtin.debug:
        msg: 
          - "Ubuntu version: {{ ansible_distribution_version }}"
          - "Selected benchmark: '{{ scap_benchmark }}'"
          - "System files found: {{ system_scap_files.files | default([]) | map(attribute='path') | list }}"
          - "System has target benchmark: {{ system_has_benchmark }}"
        
    - name: Ensure SCAP content directory exists
      ansible.builtin.file:
        path: /usr/share/xml/scap/ssg/content/
        state: directory
        mode: '0755'
      when: not system_has_benchmark
        
    - name: Download SCAP Security Guide (if not available)
      ansible.builtin.get_url:
        url: "https://github.com/ComplianceAsCode/content/releases/download/v{{ scap_version }}/scap-security-guide-{{ scap_version }}.zip"
        dest: "/tmp/scap-security-guide-{{ scap_version }}.zip"
      when: not system_has_benchmark
      
    - name: Unzip SCAP content (if downloaded)
      ansible.builtin.unarchive:
        src: "/tmp/scap-security-guide-{{ scap_version }}.zip"
        dest: /usr/share/xml/scap/ssg/content/
        remote_src: yes
        creates: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}"
      when: not system_has_benchmark
      
    - name: Set benchmark path - system installation
      ansible.builtin.set_fact:
        benchmark_path: "/usr/share/xml/scap/ssg/content/{{ scap_benchmark }}"
        benchmark_source: "system"
      when: system_has_benchmark
      
    - name: Set benchmark path - downloaded content (fallback)
      ansible.builtin.set_fact:
        benchmark_path: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_benchmark }}"
        benchmark_source: "downloaded"
      when: not system_has_benchmark
      
    - name: Verify final benchmark file exists
      ansible.builtin.stat:
        path: "{{ benchmark_path }}"
      register: final_benchmark_check
      
    - name: Debug final benchmark information
      ansible.builtin.debug:
        msg: 
          - "Benchmark path: {{ benchmark_path }}"
          - "Benchmark source: {{ benchmark_source | default('unknown') }}"
          - "File exists: {{ final_benchmark_check.stat.exists }}"
          - "Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Profile: {{ scap_profile }}"
          
    - name: List available profiles in benchmark
      ansible.builtin.command: >-
        oscap info {{ benchmark_path }}
      register: oscap_info
      when: final_benchmark_check.stat.exists
      ignore_errors: yes
      
    - name: Show available profiles
      ansible.builtin.debug:
        msg: "{{ oscap_info.stdout_lines }}"
      when: oscap_info is defined and oscap_info.stdout_lines is defined
      
    - name: Test if CIS profile exists
      ansible.builtin.command: >-
        oscap info {{ benchmark_path }} | grep -i cis
      register: cis_profiles
      when: final_benchmark_check.stat.exists
      ignore_errors: yes
      
    - name: Show CIS profiles found
      ansible.builtin.debug:
        msg: "CIS profiles found: {{ cis_profiles.stdout_lines | default(['None found']) }}"
      when: cis_profiles is defined
        
    - name: Create OpenSCAP content directory
      ansible.builtin.file:
        path: /var/lib/openscap/content
        state: directory
        mode: '0755'
        
    - name: Run CIS Level 1 Server scan
      ansible.builtin.command: >-
        oscap xccdf eval
        --profile {{ scap_profile }}
        --results /tmp/{{ ansible_hostname }}-cis-scan-results.xml
        --report /tmp/{{ ansible_hostname }}-cis-report.html
        {{ benchmark_path }}
      register: scan_result
      ignore_errors: yes
      when: final_benchmark_check.stat.exists
      
    - name: Show scan result summary
      ansible.builtin.debug:
        msg: 
          - "Scan exit code: {{ scan_result.rc | default('N/A') }}"
          - "Scan completed - check report for details"
      when: scan_result is defined and scan_result is not skipped
      
    - name: Create reports directory on each server
      ansible.builtin.file:
        path: /home/reports
        state: directory
        mode: '0755'
      when: final_benchmark_check.stat.exists
        
    - name: Copy HTML report to permanent location
      ansible.builtin.copy:
        src: /tmp/{{ ansible_hostname }}-cis-report.html
        dest: "/home/reports/{{ ansible_hostname }}-cis-l1-{{ ansible_date_time.date }}-report.html"
        mode: '0644'
        remote_src: yes
      when: 
        - scan_result is defined
        - scan_result is not skipped
        - scan_result.rc is defined
        
    - name: Copy XML results to permanent location  
      ansible.builtin.copy:
        src: /tmp/{{ ansible_hostname }}-cis-scan-results.xml
        dest: "/home/reports/{{ ansible_hostname }}-cis-l1-{{ ansible_date_time.date }}-results.xml"
        mode: '0644'
        remote_src: yes
      when: 
        - scan_result is defined
        - scan_result is not skipped
        - scan_result.rc is defined
        
    - name: Display report location
      ansible.builtin.debug:
        msg: 
          - "Relatórios CIS salvos em:"
          - "HTML: /home/reports/{{ ansible_hostname }}-cis-l1-{{ ansible_date_time.date }}-report.html"
          - "XML: /home/reports/{{ ansible_hostname }}-cis-l1-{{ ansible_date_time.date }}-results.xml"
      when: 
        - scan_result is defined
        - scan_result is not skipped
        - scan_result.rc is defined
