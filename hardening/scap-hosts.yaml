---
- name: Run OpenSCAP multi-version Ubuntu
  hosts: all
  vars:
    scap_version: "0.1.77"
    target_profile: "xccdf_org.ssgproject.content_profile_cis_level1_server"

  tasks:
    - name: Habilitar repositórios necessários
      ansible.builtin.apt_repository:
        repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates main universe"
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Atualizar cache do apt
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Instalar dependências do OpenSCAP
      ansible.builtin.apt:
        name:
          - libopenscap8
          - unzip
          # ssg-debderived só está disponível até Ubuntu 22.04
        state: present
      register: openscap_install
      until: openscap_install is success
      retries: 3
      delay: 10

    - name: Verificar instalação do libopenscap8
      ansible.builtin.command: dpkg -l libopenscap8
      register: openscap_check
      failed_when: openscap_check.rc != 0
      changed_when: false

    - name: Detectar versão do Ubuntu
      ansible.builtin.set_fact:
        ubuntu_short: "ubuntu{{ ansible_distribution_version | replace('.', '')[:4] }}"
        # 22.04 -> ubuntu2204, 24.04 -> ubuntu2404

    - name: Definir arquivo de data stream
      ansible.builtin.set_fact:
        scap_data_stream: "ssg-{{ ubuntu_short }}-ds.xml"

    - name: Criar diretório SCAP
      ansible.builtin.file:
        path: /usr/share/xml/scap/ssg/content
        state: directory
        mode: '0755'

    - name: Verificar se o SCAP já está instalado
      ansible.builtin.stat:
        path: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: scap_installed

    - name: Baixar SCAP Security Guide
      ansible.builtin.get_url:
        url: "https://github.com/ComplianceAsCode/content/releases/download/v{{ scap_version }}/scap-security-guide-{{ scap_version }}.zip"
        dest: "/tmp/scap-security-guide-{{ scap_version }}.zip"
        timeout: 60
      when: not scap_installed.stat.exists

    - name: Descompactar SCAP Guide
      ansible.builtin.unarchive:
        src: "/tmp/scap-security-guide-{{ scap_version }}.zip"
        dest: "/usr/share/xml/scap/ssg/content"
        remote_src: yes
        creates: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      when: not scap_installed.stat.exists

    - name: Verificar data stream
      ansible.builtin.stat:
        path: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: ds_check
      failed_when: not ds_check.stat.exists

    - name: Executar scan OpenSCAP
      ansible.builtin.command: >
        oscap xccdf eval 
        --profile {{ target_profile }}
        --report /tmp/{{ inventory_hostname }}-report.html
        "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: scan
      ignore_errors: yes
      # Códigos de retorno válidos:
      # 0 = Conformidade total
      # 1 = Erro
      # 2 = Não conformidade encontrada
      changed_when: scan.rc in [0, 2]

    - name: Criar diretório de relatórios
      ansible.builtin.file:
        path: /home/master/reports
        state: directory
        mode: '0755'
      delegate_to: master
      run_once: true

    - name: Transferir relatórios
      ansible.builtin.fetch:
        src: "/tmp/{{ inventory_hostname }}-report.html"
        dest: "/home/master/reports/{{ inventory_hostname }}-{{ ansible_date_time.date }}-report.html"
        flat: no  # Mantém estrutura de diretórios
      delegate_to: master
      ignore_errors: yes

    - name: Limpeza
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      loop:
        - "{{ inventory_hostname }}-report.html"
        - "scap-security-guide-{{ scap_version }}.zip"
      ignore_errors: yes
