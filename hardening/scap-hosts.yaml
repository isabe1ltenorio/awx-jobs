---
- name: Run OpenSCAP multi-version Ubuntu
  hosts: all
  vars:
    scap_version: "0.1.77"  # Versão com suporte a Ubuntu 24.04
    target_profile: "xccdf_org.ssgproject.content_profile_cis_level1_server"  # Perfil CIS (altere se necessário)

  tasks:
    - name: Atualizar pacotes
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist

    - name: Instalar dependências do OpenSCAP
      ansible.builtin.apt:
        name:
          - libopenscap8
          - unzip
          - ssg-debderived
        state: present

    - name: Detectar versão do Ubuntu (formato compactado)
      ansible.builtin.set_fact:
        ubuntu_short: "ubuntu{{ ansible_distribution_version | replace('.', '')[:4] }}"
        # Exemplos:
        # 22.04 -> ubuntu2204
        # 24.04 -> ubuntu2404

    - name: Definir arquivo de data stream
      ansible.builtin.set_fact:
        scap_data_stream: "ssg-{{ ubuntu_short }}-ds.xml"

    - name: Criar diretório para conteúdo SCAP
      ansible.builtin.file:
        path: /usr/share/xml/scap/ssg/content
        state: directory
        mode: '0755'

    - name: Verificar se guia SCAP já está instalado
      ansible.builtin.stat:
        path: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: scap_installed

    - name: Baixar guia SCAP Security
      ansible.builtin.get_url:
        url: "https://github.com/ComplianceAsCode/content/releases/download/v{{ scap_version }}/scap-security-guide-{{ scap_version }}.zip"
        dest: "/tmp/scap-security-guide-{{ scap_version }}.zip"
      when: not scap_installed.stat.exists

    - name: Descompactar guia SCAP
      ansible.builtin.unarchive:
        src: "/tmp/scap-security-guide-{{ scap_version }}.zip"
        dest: "/usr/share/xml/scap/ssg/content"
        remote_src: yes
      when: not scap_installed.stat.exists

    - name: Verificar integridade do data stream
      ansible.builtin.stat:
        path: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: ds_check
      failed_when: not ds_check.stat.exists

    - name: Listar perfis disponíveis
      ansible.builtin.command:
        cmd: "oscap info /usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: oscap_profiles
      changed_when: false

    - name: Mostrar perfis
      ansible.builtin.debug:
        var: oscap_profiles.stdout

    - name: Executar scan OpenSCAP
      ansible.builtin.command: >
        oscap xccdf eval 
        --profile {{ target_profile }}
        --report /tmp/{{ inventory_hostname }}-report.html
        "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: scan
      ignore_errors: yes  # Scan retorna não-zero se encontrar falhas
      changed_when: scan.rc == 0 or scan.rc == 2  # Códigos de sucesso do OpenSCAP

    - name: Criar diretório de relatórios no master
      ansible.builtin.file:
        path: /home/master/reports
        state: directory
        mode: '0755'
      delegate_to: master
      run_once: true

    - name: Transferir relatórios para o master
      ansible.builtin.fetch:
        src: "/tmp/{{ inventory_hostname }}-report.html"
        dest: "/home/master/reports/"
        flat: yes
      delegate_to: master
      ignore_errors: yes  # Caso o scan tenha falhado completamente

    - name: Limpar arquivos temporários
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      loop:
        - "{{ inventory_hostname }}-report.html"
        - "scap-security-guide-{{ scap_version }}.zip"
      ignore_errors: yes
