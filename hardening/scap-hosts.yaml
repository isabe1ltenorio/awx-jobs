---
- name: Run OpenSCAP for CIS Level 1 Server
  hosts: all
  vars:
    scap_version: "0.1.73"
    # Usar benchmark mais recente disponível para cada versão
    scap_benchmark: >-
      {% if ansible_distribution_version == '24.04' %}ssg-ubuntu2204-ds.xml
      {% elif ansible_distribution_version == '22.04' %}ssg-ubuntu2204-ds.xml
      {% else %}ssg-ubuntu2004-ds.xml{% endif %}
    # Perfil corrigido para Ubuntu
    scap_profile: >-
      {% if ansible_distribution == 'Ubuntu' %}xccdf_org.ssgproject.content_profile_cis
      {% else %}xccdf_org.ssgproject.content_profile_cis_server_l1{% endif %}
  tasks:
    - name: Add universe repository
      ansible.builtin.apt_repository:
        repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
        state: present
      when: ansible_distribution_release in ['jammy', 'noble']
      
    - name: Update package index
      ansible.builtin.apt:
        update_cache: yes
        
    - name: Install required packages
      ansible.builtin.apt:
        name:
          - "{{ 'openscap-scanner' if ansible_distribution_version == '24.04' else 'libopenscap8' }}"
          - unzip
        state: present
        
    - name: Ensure SCAP content directory exists
      ansible.builtin.file:
        path: /usr/share/xml/scap/ssg/content/
        state: directory
        mode: '0755'
        
    - name: Check if SCAP content is already installed
      ansible.builtin.stat:
        path: /usr/share/xml/scap/ssg/content/.scap_installed
      register: scap_installed
      
    - name: Download SCAP Security Guide
      ansible.builtin.get_url:
        url: "https://github.com/ComplianceAsCode/content/releases/download/v{{ scap_version }}/scap-security-guide-{{ scap_version }}.zip"
        dest: "/tmp/scap-security-guide-{{ scap_version }}.zip"
      when: not scap_installed.stat.exists
      
    - name: Unzip SCAP content
      ansible.builtin.unarchive:
        src: "/tmp/scap-security-guide-{{ scap_version }}.zip"
        dest: /usr/share/xml/scap/ssg/content/
        remote_src: yes
        creates: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}"
      when: not scap_installed.stat.exists
      
    - name: Mark SCAP as installed
      ansible.builtin.file:
        path: /usr/share/xml/scap/ssg/content/.scap_installed
        state: touch
      when: not scap_installed.stat.exists
      
    - name: Verify benchmark file exists
      ansible.builtin.stat:
        path: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_benchmark }}"
      register: benchmark_file
      
    - name: Debug benchmark file path and existence
      ansible.builtin.debug:
        msg: 
          - "Benchmark path: /usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_benchmark }}"
          - "File exists: {{ benchmark_file.stat.exists }}"
          - "Distribution: {{ ansible_distribution }}"
          - "Distribution version: {{ ansible_distribution_version }}"
          
    - name: List SCAP content directory
      ansible.builtin.find:
        paths: /usr/share/xml/scap/ssg/content/
        file_type: any
      register: scap_contents
      
    - name: Show SCAP directory contents
      ansible.builtin.debug:
        msg: "SCAP contents: {{ scap_contents.files | map(attribute='path') | list }}"
      
    - name: Run CIS scan
      ansible.builtin.command: >-
        oscap xccdf eval
        --profile {{ scap_profile }}
        --report /tmp/{{ ansible_hostname }}-cis-report.html
        /usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_benchmark }}
      register: scan_result
      ignore_errors: yes
      when: benchmark_file.stat.exists
      
    - name: Create reports directory on each server
      ansible.builtin.file:
        path: /home/reports
        state: directory
        mode: '0755'
      when: 
        - benchmark_file.stat.exists
        - scan_result is defined
        
    - name: Move report to permanent location
      ansible.builtin.copy:
        src: /tmp/{{ ansible_hostname }}-cis-report.html
        dest: "/home/reports/{{ ansible_hostname }}-cis-l1-{{ ansible_date_time.date }}-report.html"
        mode: '0644'
        remote_src: yes
      when: 
        - benchmark_file.stat.exists
        - scan_result is defined
        
    - name: Display report location
      ansible.builtin.debug:
        msg: "Relatório CIS salvo em: /home/reports/{{ ansible_hostname }}-cis-l1-{{ ansible_date_time.date }}-report.html"
      when: 
        - benchmark_file.stat.exists
        - scan_result is defined
