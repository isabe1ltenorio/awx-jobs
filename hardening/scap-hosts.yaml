---
- name: Run OpenSCAP multi-version Ubuntu (Diagnostic Only)
  hosts: all
  become: yes 
  vars:
    scap_version: "0.1.77"
    target_profile: "xccdf_org.ssgproject.content_profile_cis_level1_server"

  tasks:
    - name: Habilitar repositórios necessários
      ansible.builtin.apt_repository:
        repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates main universe"
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Atualizar cache do apt
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Instalar dependências OpenSCAP (Ubuntu 22.04)
      ansible.builtin.apt:
        name:
          - libopenscap8
          - unzip
        state: present
      when: ansible_distribution_version == '22.04'
      register: openscap_install_22
      until: openscap_install_22 is success
      retries: 3
      delay: 10

    - name: Instalar dependências OpenSCAP (Ubuntu 24.04)
      ansible.builtin.apt:
        name:
          - libopenscap25t64
          - openscap-scanner
          - openscap-utils
          - unzip
        state: present
      when: ansible_distribution_version == '24.04'
      register: openscap_install_24
      until: openscap_install_24 is success
      retries: 3
      delay: 10

    - name: Instalar dependências OpenSCAP (outras versões)
      ansible.builtin.apt:
        name:
          - libopenscap8
          - unzip
        state: present
      when: ansible_distribution_version not in ['22.04', '24.04']
      register: openscap_install_other
      until: openscap_install_other is success
      retries: 3
      delay: 10

    - name: Detectar versão do Ubuntu
      ansible.builtin.set_fact:
        ubuntu_short: "ubuntu{{ ansible_distribution_version | replace('.', '') }}"

    - name: Definir arquivo de data stream
      ansible.builtin.set_fact:
        scap_data_stream: "ssg-{{ ubuntu_short }}-ds.xml"

    - name: Mostrar informações detectadas
      ansible.builtin.debug:
        msg: |
          =====================================
          DETECÇÃO AUTOMÁTICA
          Ubuntu Version: {{ ansible_distribution_version }}
          Ubuntu Short: {{ ubuntu_short }}
          Data Stream: {{ scap_data_stream }}
          Profile: {{ target_profile }}
          =====================================

    - name: Criar diretório SCAP
      ansible.builtin.file:
        path: /usr/share/xml/scap/ssg/content
        state: directory
        mode: '0755'

    - name: Verificar se o SCAP já está instalado
      ansible.builtin.stat:
        path: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: scap_installed

    - name: Baixar SCAP Security Guide
      ansible.builtin.get_url:
        url: "https://github.com/ComplianceAsCode/content/releases/download/v{{ scap_version }}/scap-security-guide-{{ scap_version }}.zip"
        dest: "/tmp/scap-security-guide-{{ scap_version }}.zip"
        timeout: 60
      when: not scap_installed.stat.exists

    - name: Descompactar SCAP Guide
      ansible.builtin.unarchive:
        src: "/tmp/scap-security-guide-{{ scap_version }}.zip"
        dest: "/usr/share/xml/scap/ssg/content"
        remote_src: yes
        creates: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      when: not scap_installed.stat.exists

    - name: Verificar data stream
      ansible.builtin.stat:
        path: "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: ds_check

    - name: Listar profiles disponíveis
      ansible.builtin.command: >
        oscap info --profiles
        "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: available_profiles
      when: ds_check.stat.exists
      changed_when: false

    - name: Mostrar profiles disponíveis
      ansible.builtin.debug:
        msg: |
          =====================================
          PROFILES DISPONÍVEIS
          {{ available_profiles.stdout }}
          =====================================
      when: ds_check.stat.exists

    - name: Falha se data stream não existe
      ansible.builtin.fail:
        msg: |
          Data stream não encontrado: {{ scap_data_stream }}
          Caminho completo: /usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}
      when: not ds_check.stat.exists

    - name: Executar scan OpenSCAP
      ansible.builtin.command: >
        oscap xccdf eval
        --profile {{ target_profile }}
        --report /tmp/{{ inventory_hostname }}-cis-l1-report.html
        --results /tmp/{{ inventory_hostname }}-cis-l1-results.xml
        "/usr/share/xml/scap/ssg/content/scap-security-guide-{{ scap_version }}/{{ scap_data_stream }}"
      register: scan
      ignore_errors: yes
      async: 2400
      poll: 0

    - name: Aguardar conclusão do scan
      ansible.builtin.async_status:
        jid: "{{ scan.ansible_job_id }}"
      register: scan_result
      until: scan_result.finished
      retries: 50
      delay: 60
      failed_when: scan_result.rc is defined and scan_result.rc == 1

    - name: Mostrar resultado do scan
      ansible.builtin.debug:
        msg: |
          =====================================
          SCAN CONCLUÍDO
          Return Code: {{ scan_result.rc }}
          Host: {{ inventory_hostname }}
          (0=total compliance, 1=error, 2=non-compliance found)
          =====================================

    # --- MODIFIED SECTION START ---
    - name: Criar diretório de relatórios na VM de destino
      ansible.builtin.file:
        path: /root/reports # Or /tmp/reports, or /var/lib/ansible/reports, etc.
        state: directory
        mode: '0755'

    - name: Mover relatório HTML para diretório final na VM de destino
      ansible.builtin.command: "mv /tmp/{{ inventory_hostname }}-cis-l1-report.html /root/reports/"
      args:
        removes: "/tmp/{{ inventory_hostname }}-cis-l1-report.html" # Ensure it is moved, not copied.
      when: scan_result.rc is defined # Only attempt if scan ran
      ignore_errors: yes # In case file was not generated for some reason

    - name: Mover relatório XML para diretório final na VM de destino
      ansible.builtin.command: "mv /tmp/{{ inventory_hostname }}-cis-l1-results.xml /root/reports/"
      args:
        removes: "/tmp/{{ inventory_hostname }}-cis-l1-results.xml" # Ensure it is moved, not copied.
      when: scan_result.rc is defined # Only attempt if scan ran
      ignore_errors: yes # In case file was not generated for some reason

    - name: Mostrar localização dos relatórios na VM de destino
      ansible.builtin.debug:
        msg: |
          =====================================
          RELATÓRIOS GERADOS
          HTML: /root/reports/{{ inventory_hostname }}-cis-l1-report.html
          XML: /root/reports/{{ inventory_hostname }}-cis-l1-results.xml
          =====================================

    - name: Limpeza
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      loop:
        - "scap-security-guide-{{ scap_version }}.zip"
      ignore_errors: yes
